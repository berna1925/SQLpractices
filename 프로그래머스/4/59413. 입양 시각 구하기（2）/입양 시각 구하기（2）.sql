# 2025-07-29 18:30 볼 때마다 못 푸는 문제
# UNION을 이런 식으로 쓰다니 창의력이
# GROUP BY를 쓰면 행이 날아가고 그렇다고 PARTITION OVER를 쓰자니 시간외엔 집계할 방법이 없음

WITH HOURS AS (
    SELECT 0 AS HOUR UNION ALL
    SELECT 1 UNION ALL
    SELECT 2 UNION ALL
    SELECT 3 UNION ALL
    SELECT 4 UNION ALL
    SELECT 5 UNION ALL
    SELECT 6 UNION ALL
    SELECT 7 UNION ALL
    SELECT 8 UNION ALL
    SELECT 9 UNION ALL
    SELECT 10 UNION ALL
    SELECT 11 UNION ALL
    SELECT 12 UNION ALL
    SELECT 13 UNION ALL
    SELECT 14 UNION ALL
    SELECT 15 UNION ALL
    SELECT 16 UNION ALL
    SELECT 17 UNION ALL
    SELECT 18 UNION ALL
    SELECT 19 UNION ALL
    SELECT 20 UNION ALL
    SELECT 21 UNION ALL
    SELECT 22 UNION ALL
    SELECT 23
)

SELECT H.HOUR, COUNT(A.ANIMAL_ID) AS COUNT
FROM HOURS H
LEFT JOIN ANIMAL_OUTS A
    ON HOUR(A.DATETIME) = H.HOUR
GROUP BY H.HOUR
ORDER BY H.HOUR ;


# 다른 사람의 풀이
# RECURSIVE 재귀문으로 작성 -> 노션에 따로 정리
WITH RECURSIVE HS AS (
    SELECT 0 AS H
    UNION ALL
    SELECT H + 1
    FROM HS
    WHERE H < 23
),

CT AS (
    SELECT HOUR(DATETIME) AS H,
           COUNT(1) AS CNT
    FROM ANIMAL_OUTS
    GROUP BY H
)

SELECT HS.H AS HOUR,
    COALESCE(CT.CNT, 0) AS COUNT
FROM HS
LEFT JOIN CT ON HS.H = CT.H
ORDER BY HS.H ;




# WITH CT_TABLE AS (
# SELECT HOUR(DATETIME) AS HOUR, COUNT(ANIMAL_ID) AS CT
# FROM ANIMAL_OUTS
# GROUP BY HOUR(DATETIME)
# ORDER BY HOUR
# )

# SELECT 



